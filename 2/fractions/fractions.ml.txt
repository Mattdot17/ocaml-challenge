(*_________________________*)


(* is_posfrac : int * int -> bool 
   compare_posfrac : int * int -> int * int -> int
   compare_frac : int * int -> int * int -> int
*)   
  

let is_posfrac (a,b) = b <> 0 && (a >= 0 || a <= 0);;

let compare_posfrac (a,b) (c,d) =
  assert (is_posfrac (a,b) && is_posfrac (a,b)); 
  let left = a * d and right = b * c in
  if left=right then 0
  else if left>right then 1
  else -1
;;


(*ho usato la formula delle frazioni : 
le frazioni sono equivalenti se e solo se:
a*d=b*c
se a*d = b*c le frazioni sono uguali -> restituisco 0     
se a*d > b*c la prima fraz è maggiore -> restituisco 1 
se a*d < b*c la seconda fraz è maggiore -> restituisco -1 
*)

assert (compare_posfrac (1,2) (2,4) == 0);;
assert (compare_posfrac (1,2) (1,3) == 1);;
assert (compare_posfrac (1,2) (2,3) == -1);;


let compare_frac (a,b) (c,d) = 
  let left = a * d and right = b * c in
  if left=right then 0
  else if left>right then 1
  else -1
;;

assert (compare_frac (-1,2) (-2,4) == 0);;
assert (compare_frac (1,2) (1,3) == 1);;
assert (compare_frac (-1,2) (1,3) == -1);;
assert (compare_frac (1,2) (-1,3) == 1);;
assert (compare_frac (-1,2) (-1,3) == -1);;